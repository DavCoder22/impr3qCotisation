{"remainingRequest":"C:\\web-cotisation\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??ref--5!C:\\web-cotisation\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\web-cotisation\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\web-cotisation\\frontend\\src\\components\\CotizadorPrincipal.vue?vue&type=template&id=83ddc7c2","dependencies":[{"path":"C:\\web-cotisation\\frontend\\src\\components\\CotizadorPrincipal.vue","mtime":1734012462130},{"path":"C:\\web-cotisation\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733950475043},{"path":"C:\\web-cotisation\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1733950475629},{"path":"C:\\web-cotisation\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1733950475043},{"path":"C:\\web-cotisation\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1733950473453}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}